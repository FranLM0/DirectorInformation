// <auto-generated />
using DirectorInformation.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DirectorInformation.API.Migrations
{
    [DbContext(typeof(DirectorInformationContext))]
    [Migration("20221112183636_DBInitialMigration")]
    partial class DBInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("DirectorInformation.API.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Se lo considera uno de los pioneros de la era del Nuevo Hollywood",
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 2,
                            Description = "PAPÁ",
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 3,
                            Description = "TRILOGO",
                            Name = "Francis Ford Coppola"
                        });
                });

            modelBuilder.Entity("DirectorInformation.API.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "miPelicula favorita",
                            DirectorId = 1,
                            Name = "Empire of the sun"
                        },
                        new
                        {
                            Id = 2,
                            Description = "La de la niña con el abrigo rojo",
                            DirectorId = 1,
                            Name = "Schindle's List"
                        },
                        new
                        {
                            Id = 3,
                            Description = "crítica al racismo norteamericano",
                            DirectorId = 2,
                            Name = "Django"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Mata a Bill",
                            DirectorId = 2,
                            Name = "Kill Bill"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Clasicazo",
                            DirectorId = 3,
                            Name = "The Godfather I"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Clasicazox2",
                            DirectorId = 3,
                            Name = "The Godfather II"
                        });
                });

            modelBuilder.Entity("DirectorInformation.API.Entities.Film", b =>
                {
                    b.HasOne("DirectorInformation.API.Entities.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("DirectorInformation.API.Entities.Director", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
